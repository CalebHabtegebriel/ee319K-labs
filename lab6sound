// Sound.c
// This module contains the SysTick ISR that plays sound
// Runs on LM4F120 or TM4C123
// Program written by: Ennis and Caleb
// Date Created: 3/6/17 
// Last Modified: 9/2/19 
// Lab number: 6
// Hardware connections
// TO STUDENTS "REMOVE THIS LINE AND SPECIFY YOUR HARDWARE********

// Code files contain the actual implemenation for public functions
// this file also contains an private functions and private data
#include <stdint.h>
#include "dac.h"
#include "../inc/tm4c123gh6pm.h"

// **************Sound_Init*********************
// Initialize digital outputs and SysTick timer
// Called once, with sound/interrupts initially off
// Input: none
// Output: none
void Sound_Init(void){
//	const unsigned char Bassoon[32] = {8,8,8,8,7,7,9,15,10,1,1,4,8,11,10,6,3,2,6,10,8,5,5,5,6,7,7,9,8,8,8,7};
//	const unsigned char Flute[64]   = {6,7,9,9,10,11,12,13,13,14,15,15,15,15,15,14,13,13,12,11,10,9,8,7,7,6,6,5,5,5,5,4,4,4,4,4,4,3,3,3,3,3,2,2,1,1,1,1,0,0,0,0,0,1,1,1,2,2,3,3,4,4,5};
//	const unsigned char Guitar[32]  = {5,5,4,1,1,3,8,11,11,9,4,2,5,11,15,13,9,7,5,5,6,8,8,7,4,3,3,3,3,4,5,5,5,5,4,1,1,3,8,11,11,9,4,2,5,11,15,13,9,7,5,5,6,8,8,7,4,3,3,3,3,4,5,5};
//	const unsigned char Horn[64]    = {7,8,8,8,8,9,10,12,15,15,15,13,10,7,4,3,3,3,3,3,3,3,4,4,4,4,5,6,7,8,8,9,9,10,11,11,12,13,13,12,12,13,14,12,11,9,8,6,3,2,1,1,0,1,1,1,2,2,3,4,4,6,7,7};
    const uint8_t Sine[32]           = {8, 9, 11, 12, 13, 14, 14, 15, 15, 15, 14, 14, 13, 12, 11, 9, 8, 7, 5, 4, 3, 2, 2, 1, 1, 1, 2, 2, 3, 4, 5, 7};
	DAC_Init();
	NVIC_ST_CTRL_R = 0;				    //Disable SysTick during setup
	NVIC_ST_RELOAD_R = 0x00FFFFFF;	    //Timer reset value (Current but in bus cycles)
    NVIC_ST_CURRENT_R = 0;			    //Clear timer
	NVIC_ST_CTRL_R = 0x00000007; 		//Enable clock with interupts
	
}


// **************Sound_Play*********************
// Start sound output, and set Systick interrupt period 
// Sound continues until Sound_Play called again
// This function returns right away and sound is produced using a periodic interrupt
// Input: interrupt period
//           Units of period to be determined by YOU
//           Maximum period to be determined by YOU
//           Minimum period to be determined by YOU
//         if period equals zero, disable sound output
// Output: none
void Sound_Play(uint32_t period){
    NVIC_ST_RELOAD_R = period - 1;
}

void SysTick_Handler(void){
    GPIO_PORTF_DATA_R ^= 0x08;     //Toggle PF3
    DAC_Out (Sine[Index]);
    Index = (Index+1) & 0x20;      //Allow only 32 bits
}
